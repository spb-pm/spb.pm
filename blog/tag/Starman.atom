<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://spb.pm/blog/tag/Starman/</id>
    <title>SPb PM Group</title>
    <updated>2015-12-02T23:27:41Z</updated>
    <link href="http://spb.pm/blog/tag/Starman.atom" rel="self" />
    <link href="http://spb.pm/blog/tag/Starman/" rel="alternate" />
    <generator version="0.055">Statocles</generator>
    <entry>
        <id>http://spb.pm/blog/2015/05/15/which-should-i-use-starman-and-starlet-/</id>
        <title>Что мне следует использовать: Starman или Starlet?</title>
        <link href="http://spb.pm/blog/2015/05/15/which-should-i-use-starman-and-starlet-/" rel="alternate" />
        <content type="html"><![CDATA[
            <p><a href="http://weblog.bulknews.net/post/118974333634/which-should-i-use-starman-or-starlet">Оригинальная запись в блоге Миягавы</a></p>

<p>По мотивам дискуссии в канале #plack в IRC мы создали эту не официальную документацию призванную рассказать об отличиях в 2х популярных Plack HTTP серверах: <a href="https://github.com/miyagawa/Starman">Starman</a> и <a href="https://github.com/kazuho/Starlet">Starlet</a>.</p>

<p>Кроме похожего названия эти сервера, так же делают одинаковые вещи: они обслуживают HTTP запросы в режиме pre-fork (создают несколько рабочих процессов для обслуживания входящих запросов).</p>

<p>Starman и Starlet отлично подходят для работы за реверс-прокси (например nginx или Apache mod_proxy).</p>

<h2>Starman</h2>

<p>Starman написан мной(Миягавой) на основе отдельного модуля <a href="https://metacpan.org/release/Net-Server">Net::Server</a>. Оригинальный код был утащен из <a href="https://metacpan.org/release/Catalyst-Engine-HTTP-Prefork">HTTP сервера Catalist&#39;а</a> и модифицирован для соответствия спецификации на PSGI сервер.</p>

<p>Из-за использования Net::Server Starman имеет широкий набор возможностей по кастомизации. Например: ротация логов, управление процессами через сигналы, UNIX сокеты, прослушиваение нескольких хостов и прочее.</p>

<p>Свежие релизы так же имеют возможность прямой передачи параметров в Net::Server, что дает еще большую гибкость для бэкендов.</p>

<h2>Starlet</h2>

<p>Starlet написан <a href="https://github.com/kazuho">Kazuho Oku</a> - он известен как автор большого кол-ва ПО, включающего H2O и С-шную версию персера HTTP для Plack.</p>

<p>В отличии от Starman, Starlet использует собственную реализацию управления процессами и поддержки TCP сокетов. Во время написания Starman, я рассматривал Starlet как экспериментальный. Но учитывая репутацию его ПО и кол-во Plack серверов в его экосистеме, я могу сказать что Starlet вполне зрелое решение.</p>

<p>Kazeburo, другой активный контрибьютер Plack и Starlet, <a href="http://kazeburo.hatenablog.com/entry/2013/04/15/173407">у себя в блоге</a> (на японском) показывает что Starlet масштабируется лучше чем Starman при увеличенни числа рабочих процессов. При увеличении числа рабочих процессов выше 8, Starman имеет проблемы. Это поведение улучшает если убрать блокировку accept/serialization, но Starlet все равно выигрывает.</p>

<p>С другой стороны: Starlet не поддерживает UNIX сокеты и прослушивание нескольких хостов/портов.</p>

<p>Обновление без прерывания обслуживания все еще возможно при использовании Server::Starter перед Starlet.</p>

<h2>Выводы</h2>

<p>Starman это самостоятельный HTTP сервер с полным набором возможностей, многие из которых обеспечивает использование Net::Server.</p>

<p>Starlet проще и использует немного меньше памяти, хотя и не поддерживает все возможности которые могут быть вам нужны, а могут быть и не нужны.</p>

<p>Если вы хотите динамически контролировать число процессов, или хотите использовать UNIX сокеты, или хотите использовать фичу из Net::Server - используйте Starman.</p>

<p>Если вы хотите использовать ограниченное по ресурсам окружение, или обслуживать миллионы запросов в секунду и вам важно любое улучшение по производительности и ресурсам - используйте Starlet.</p>

<p>Каждого из них рекомендуется использовать за реверс-прокси вроде nginx. Для обновления без простоев с использованием TCP-сокетов используйте Server::Starter или SO_REUSE_PORT. </p>

                <p><a href="http://spb.pm/blog/2015/05/15/which-should-i-use-starman-and-starlet-/#section-2">Continue reading...</a></p>
            <p>Tags:
                <a href="http://spb.pm/blog/tag/перевод/">перевод</a>
                <a href="http://spb.pm/blog/tag/Starman/">Starman</a>
                <a href="http://spb.pm/blog/tag/Starlet/">Starlet</a>
                <a href="http://spb.pm/blog/tag/Plack/">Plack</a>
            </p>
        ]]></content>
        <updated>2015-05-15T00:00:00Z</updated>
        <category term="перевод" />
        <category term="Starman" />
        <category term="Starlet" />
        <category term="Plack" />
    </entry>
</feed>

